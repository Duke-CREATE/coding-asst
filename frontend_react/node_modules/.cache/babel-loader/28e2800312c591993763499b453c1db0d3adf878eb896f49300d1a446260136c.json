{"ast":null,"code":"var _jsxFileName = \"/Users/dylannguyen/Desktop/CREATE/coding-asst/frontend_react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { PythonProvider } from 'react-py';\nimport NavBar from './components/NavBar';\nimport CodeEditor from './components/CodeEditor';\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport Files from './components/Files';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Editor } from '@monaco-editor/react';\nimport { usePython } from 'react-py';\nimport Sidebar from './components/Sidebar';\n\n//define colour palette; useful way to change dark/light theme if desired\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#3f51b5\",\n      nav: \"#012169\",\n      logo: \"#FFD960\"\n    },\n    secondary: {\n      main: \"#f50057\"\n    },\n    light: {\n      main: \"#3f51b5\",\n      nav: \"#012169\",\n      logo: \"#FFD960\",\n      file: \"#FFFFFF30\"\n    },\n    background: {\n      default: \"#c4c4c4\"\n    }\n  }\n});\nfunction App() {\n  _s();\n  //react-py code\n  const {\n    runPython,\n    stdout,\n    stderr,\n    isLoading,\n    isRunning\n  } = usePython();\n  const [shell, setShell] = useState('');\n  const [input, setInput] = useState({});\n  const [files, setFiles] = useState([{\n    name: \"main.py\",\n    language: \"python\",\n    value: \"#your code here!\"\n  }, {\n    name: \"index.html\",\n    language: \"python\",\n    value: \"print('Hello World!')\"\n  }]);\n  const [user, setUser] = useState({\n    name: \"User\",\n    profilePicture: \"coding-asst/frontend_react/public/logo512.png\"\n  });\n  const updateShell = newShell => {\n    if (newShell != '') {\n      setShell(shell + \">>> \" + newShell + \"\\n\");\n    }\n  };\n  const handleRunClick = e => {\n    console.log(\"clicked\");\n    e.preventDefault();\n    runPython(input);\n  };\n  useEffect(() => {\n    updateShell(stdout + stderr);\n  }, [isRunning]); // useEffect re-runs when isRunning changes\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(PythonProvider, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          user: user,\n          handleRunClick: handleRunClick,\n          isRunning: isRunning,\n          isLoading: isLoading,\n          input: input,\n          setInput: setInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            height: \"100vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            style: {\n              'backgroundColor': theme.palette.background.default\n            },\n            children: /*#__PURE__*/_jsxDEV(Files, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n              updateShell: updateShell,\n              input: input,\n              setInput: setInput,\n              files: files\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(Sidebar, {\n              shellComp: shell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UTyfbxQGuyiZEe0QXiUVHH3a02s=\", false, function () {\n  return [usePython];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PythonProvider","NavBar","CodeEditor","ThemeProvider","createTheme","Files","Grid","Paper","Editor","usePython","Sidebar","jsxDEV","_jsxDEV","theme","palette","primary","main","nav","logo","secondary","light","file","background","default","App","_s","runPython","stdout","stderr","isLoading","isRunning","shell","setShell","input","setInput","files","setFiles","name","language","value","user","setUser","profilePicture","updateShell","newShell","handleRunClick","e","console","log","preventDefault","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","container","item","xs","shellComp","_c","$RefreshReg$"],"sources":["/Users/dylannguyen/Desktop/CREATE/coding-asst/frontend_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { PythonProvider } from 'react-py';\nimport NavBar from './components/NavBar';\nimport CodeEditor from './components/CodeEditor';\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport Files from './components/Files';\nimport { Grid, Paper } from '@material-ui/core';\nimport { Editor } from '@monaco-editor/react';\nimport { usePython } from 'react-py';\nimport Sidebar from './components/Sidebar';\n\n//define colour palette; useful way to change dark/light theme if desired\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#3f51b5\", \n      nav: \"#012169\",\n      logo: \"#FFD960\",\n    },\n    secondary: {\n      main: \"#f50057\",\n    },\n    light: {\n      main: \"#3f51b5\", \n      nav: \"#012169\",\n      logo: \"#FFD960\",\n      file: \"#FFFFFF30\",\n    },\n    background: {\n      default: \"#c4c4c4\" \n    },\n  },\n});\n\nfunction App() {\n  //react-py code\n  const { runPython, stdout, stderr, isLoading, isRunning } = usePython();\n  const [shell, setShell] = useState('');\n  const [input, setInput] = useState({});\n\n  const [files, setFiles] = useState([\n    {\n      name: \"main.py\",\n      language: \"python\",\n      value: \"#your code here!\"\n    },\n    {\n      name: \"index.html\",\n      language: \"python\",\n      value: \"print('Hello World!')\"\n    },\n  ]);\n\n  const [user, setUser] = useState({\n    name: \"User\",\n    profilePicture: \"coding-asst/frontend_react/public/logo512.png\",\n  });\n\n  const updateShell = (newShell) => {\n    if(newShell != ''){\n      setShell(shell + \">>> \" + newShell + \"\\n\");\n    }\n  };\n\n  const handleRunClick = (e) => {\n    console.log(\"clicked\");\n    e.preventDefault();\n    runPython(input);\n  }\n\n  useEffect(() => {\n    updateShell(stdout + stderr);\n  }, [isRunning]); // useEffect re-runs when isRunning changes\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper style={{ height: \"100vh\" }}>\n        <PythonProvider>\n          <NavBar \n            user={user} \n            handleRunClick={handleRunClick} \n            isRunning={isRunning}\n            isLoading={isLoading}\n            input={input}\n            setInput={setInput}\n          />\n          <Grid container style={{ height: \"100vh\" }}>\n            <Grid item xs={2} style={{'backgroundColor': theme.palette.background.default}}>\n              <Files />\n            </Grid>\n            <Grid item xs={5}>\n              <CodeEditor \n                updateShell={updateShell}\n                input={input}\n                setInput={setInput}\n                files={files}\n              />\n            </Grid>\n            <Grid item xs={5}>\n              <Sidebar shellComp={shell}/>\n            </Grid>\n          </Grid>\n        </PythonProvider>\n      </Paper>\n    </ThemeProvider>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,cAAc,QAAQ,UAAU;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,aAAa,EAAEC,WAAW,QAAQ,0BAA0B;AACrE,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,IAAI,EAAEC,KAAK,QAAQ,mBAAmB;AAC/C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,SAAS,QAAQ,UAAU;AACpC,OAAOC,OAAO,MAAM,sBAAsB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGT,WAAW,CAAC;EACxBU,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE,SAAS;MACfC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE;IACR,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAE;IACR,CAAC;IACDI,KAAK,EAAE;MACLJ,IAAI,EAAE,SAAS;MACfC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfG,IAAI,EAAE;IACR,CAAC;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM;IAAEC,SAAS;IAAEC,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGrB,SAAS,CAAC,CAAC;EACvE,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,CACjC;IACEuC,IAAI,EAAE,SAAS;IACfC,QAAQ,EAAE,QAAQ;IAClBC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,QAAQ;IAClBC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG3C,QAAQ,CAAC;IAC/BuC,IAAI,EAAE,MAAM;IACZK,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAChC,IAAGA,QAAQ,IAAI,EAAE,EAAC;MAChBZ,QAAQ,CAACD,KAAK,GAAG,MAAM,GAAGa,QAAQ,GAAG,IAAI,CAAC;IAC5C;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBF,CAAC,CAACG,cAAc,CAAC,CAAC;IAClBvB,SAAS,CAACO,KAAK,CAAC;EAClB,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACd4C,WAAW,CAAChB,MAAM,GAAGC,MAAM,CAAC;EAC9B,CAAC,EAAE,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACElB,OAAA,CAACT,aAAa;IAACU,KAAK,EAAEA,KAAM;IAAAqC,QAAA,eAC1BtC,OAAA,CAACL,KAAK;MAAC4C,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAF,QAAA,eAChCtC,OAAA,CAACZ,cAAc;QAAAkD,QAAA,gBACbtC,OAAA,CAACX,MAAM;UACLuC,IAAI,EAAEA,IAAK;UACXK,cAAc,EAAEA,cAAe;UAC/Bf,SAAS,EAAEA,SAAU;UACrBD,SAAS,EAAEA,SAAU;UACrBI,KAAK,EAAEA,KAAM;UACbC,QAAQ,EAAEA;QAAS;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACF5C,OAAA,CAACN,IAAI;UAACmD,SAAS;UAACN,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAQ,CAAE;UAAAF,QAAA,gBACzCtC,OAAA,CAACN,IAAI;YAACoD,IAAI;YAACC,EAAE,EAAE,CAAE;YAACR,KAAK,EAAE;cAAC,iBAAiB,EAAEtC,KAAK,CAACC,OAAO,CAACQ,UAAU,CAACC;YAAO,CAAE;YAAA2B,QAAA,eAC7EtC,OAAA,CAACP,KAAK;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACP5C,OAAA,CAACN,IAAI;YAACoD,IAAI;YAACC,EAAE,EAAE,CAAE;YAAAT,QAAA,eACftC,OAAA,CAACV,UAAU;cACTyC,WAAW,EAAEA,WAAY;cACzBV,KAAK,EAAEA,KAAM;cACbC,QAAQ,EAAEA,QAAS;cACnBC,KAAK,EAAEA;YAAM;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACP5C,OAAA,CAACN,IAAI;YAACoD,IAAI;YAACC,EAAE,EAAE,CAAE;YAAAT,QAAA,eACftC,OAAA,CAACF,OAAO;cAACkD,SAAS,EAAE7B;YAAM;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAAC/B,EAAA,CAxEQD,GAAG;EAAA,QAEkDf,SAAS;AAAA;AAAAoD,EAAA,GAF9DrC,GAAG;AA0EZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}