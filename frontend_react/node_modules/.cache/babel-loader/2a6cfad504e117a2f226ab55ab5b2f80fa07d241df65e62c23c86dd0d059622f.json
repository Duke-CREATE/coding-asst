{"ast":null,"code":"'use client';\n\nvar _jsxFileName = \"/Users/dylannguyen/Desktop/CREATE/coding-asst/frontend_react/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\nimport Editor from '@monaco-editor/react';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { usePython } from 'react-py';\nimport './CodeEditor.css';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nconst files = {\n  \"script.py\": {\n    name: \"script.py\",\n    language: \"python\",\n    value: \"print(3+5)\"\n  },\n  \"index.html\": {\n    name: \"index.html\",\n    language: \"html\",\n    value: \"<div> </div>\"\n  }\n};\nexport default function CodeEditor(props) {\n  _s();\n  const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\n  const editorRef = useRef(null);\n  const file = files[fileName];\n  const [input, setInput] = useState('');\n  const {\n    runPython,\n    stdout,\n    stderr,\n    isLoading,\n    isRunning\n  } = usePython();\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  function handleEditorDidMount(editor, monaco) {\n    editorRef.current = editor;\n  }\n  useEffect(() => {\n    props.updateShell(stdout + stderr);\n    // Place your function here\n  }, [isRunning]); // useEffect re-runs when stateVariable changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          \"aria-label\": \"simple tabs example\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Tab One\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Tab Two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: !isRunning ? 'Run' : 'Running...',\n          disabled: isLoading || isRunning,\n          onClick: e => {\n            e.preventDefault();\n            runPython(input);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"60vh\",\n          width: \"100%\",\n          theme: \"vs-dark\",\n          onMount: handleEditorDidMount,\n          path: file.name,\n          defaultLanguage: file.language,\n          defaultValue: file.value,\n          onChange: () => {\n            setInput(editorRef.current.getValue());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 1,\n        children: \"Tab Two Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CodeEditor, \"r+eWBQj6GNhsx369n9WlCyCdm1U=\", false, function () {\n  return [usePython, useStyles];\n});\n_c2 = CodeEditor;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"CodeEditor\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","Editor","React","useState","useRef","useEffect","usePython","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","TabPanel","props","children","value","index","other","component","role","hidden","id","p","fileName","lineNumber","columnNumber","_c","propTypes","node","any","isRequired","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","files","name","language","CodeEditor","setFileName","editorRef","file","input","setInput","runPython","stdout","stderr","isLoading","isRunning","classes","setValue","handleChange","event","newValue","handleEditorDidMount","editor","monaco","current","updateShell","className","position","onChange","label","type","disabled","onClick","e","preventDefault","height","width","onMount","path","defaultLanguage","defaultValue","getValue","_c2","$RefreshReg$"],"sources":["/Users/dylannguyen/Desktop/CREATE/coding-asst/frontend_react/src/components/CodeEditor.js"],"sourcesContent":["'use client'\nimport Editor from '@monaco-editor/react';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { usePython } from 'react-py'\nimport './CodeEditor.css';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst files = {\n    \"script.py\": {\n      name: \"script.py\",\n      language: \"python\",\n      value: \"print(3+5)\"\n    },\n    \"index.html\": {\n      name: \"index.html\",\n      language: \"html\",\n      value: \"<div> </div>\"\n    }\n}\n\nexport default function CodeEditor( props ) {\n    const [fileName, setFileName] = useState(\"script.py\"); // change to \"index.html\"\n    const editorRef = useRef(null);\n    const file = files[fileName];\n    const [input, setInput] = useState('');\n    const { runPython, stdout, stderr, isLoading, isRunning } = usePython();\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function handleEditorDidMount(editor, monaco) {\n        editorRef.current = editor;\n    }\n\n    useEffect(() => {\n      props.updateShell(stdout + stderr);\n      // Place your function here\n    }, [isRunning]); // useEffect re-runs when stateVariable changes\n\n    return (\n        <>\n        <div className={classes.root}>\n        <AppBar position=\"static\">\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Tab One\" />\n            <Tab label=\"Tab Two\" />\n            </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n            <input\n                type=\"submit\"\n                value={!isRunning ? 'Run' : 'Running...'}\n                disabled={isLoading || isRunning}\n                onClick={(e) => {\n                  e.preventDefault();\n                  runPython(input);\n                }}\n            />\n            <Editor\n                height=\"60vh\"\n                width=\"100%\"\n                theme=\"vs-dark\"\n                onMount={handleEditorDidMount}\n                path={file.name}\n                defaultLanguage={file.language}\n                defaultValue={file.value}\n                onChange={() => {setInput(editorRef.current.getValue())}}\n            />\n\n            \n        </TabPanel>\n        <TabPanel value={value} index={1}>\n            Tab Two Content\n        </TabPanel>\n        </div>\n    </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}